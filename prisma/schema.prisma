// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String          @id @unique
  username       String          @unique
  createdAt      DateTime        @default(now())
  profileImage   String
  reviews        Review[]
  listening      Listening[]
  listened       Listened[]
  wantToListen   WantToListen[]
  favoriteTracks FavoriteTrack[]
}

model Review {
  id             Int             @id @default(autoincrement())
  createdAt      DateTime        @default(now())
  body           String?
  user           User            @relation(fields: [userId], references: [id])
  userId         String
  Album          Album           @relation(fields: [albumId], references: [uri])
  albumId        String
  rating         Float
  favoriteTracks FavoriteTrack[]
}

model FavoriteTrack {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  track     Track    @relation(fields: [trackId], references: [uri])
  trackId   String
  Review    Review?  @relation(fields: [reviewId], references: [id])
  reviewId  Int?
}

model Album {
  id           String         @id @unique
  uri          String         @unique
  title        String
  genre        String?
  year         Int?
  reviews      Review[]
  listening    Listening[]
  listened     Listened[]
  wantToListen WantToListen[]
  images       Image[]
  tracks       Track[]
  artists      Artist[]
}

model Artist {
  id     String  @id @unique
  uri    String  @unique
  name   String
  albums Album[]
  tracks Track[]
}

model Track {
  id         String          @id @unique
  uri        String          @unique
  title      String
  trackNum   Int
  duration   Int
  previewUrl String
  album      Album?          @relation(fields: [albumId], references: [id])
  albumId    String?
  favorites  FavoriteTrack[]
  artists    Artist[]
}

model Image {
  id      Int    @id @default(autoincrement())
  url     String
  height  Int
  width   Int
  album   Album  @relation(fields: [albumId], references: [id])
  albumId String
}

model Listening {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  album     Album    @relation(fields: [albumId], references: [id])
  albumId   String
}

model Listened {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  album     Album    @relation(fields: [albumId], references: [id])
  albumId   String
}

model WantToListen {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  album     Album    @relation(fields: [albumId], references: [id])
  albumId   String
}
